- name: Update and upgrade apt packages
  block:
    - name: Update apt cache
      command: apt-get update
      register: update_result
      until: update_result.rc == 0
      retries: 5
      delay: 10

    - name: Upgrade apt packages
      command: apt-get upgrade -y
      register: upgrade_result
      until: upgrade_result.rc == 0
      retries: 5
      delay: 10
  tags: [ubuntu, openresty, lapis]

- name: Install luarocks
  apt:
    name: luarocks
    state: present
  tags: [openresty, lapis]

- name: Load host variables
  include_vars: "{{ playbook_dir }}/host_vars/{{ inventory_hostname }}/vars.yaml"

- name: Adding user www-data
  user:
    name: www-data
    group: www-data
    shell: /bin/bash
    password: "{{ nginx_user_password }}"
    groups: sudo
    append: yes
  tags: [openresty, lapis, dashboard, nginx]

- name: Add www-data user to group root
  user:
    name: www-data
    groups: root
    state: present
  tags: [openresty, lapis, dashboard, nginx]

- name: Add www-data user to group sudo
  user:
    name: www-data
    groups: sudo
    append: yes
  tags: [openresty, lapis, dashboard, nginx]

- name: make sure base nginx conf dir exits
  ansible.builtin.file:
    path: /opt/nginx/base.d/
    state: directory
    owner: "www-data"
    group: root
    mode: 0775
  notify: Restart openresty
  tags: [openresty, lapis, dashboard, nginx]

- name: Add nginx base configuration
  copy:
    src: ../../nginx-base.d/
    dest: /opt/nginx/base.d/
    owner: "www-data"
    group: root
    mode: "0644"
  tags: [openresty, lapis, dashboard, nginx]

- name: make sure tenants nginx conf dir exits
  ansible.builtin.file:
    path: /opt/nginx/conf.d/
    state: directory
    owner: "www-data"
    group: root
    mode: 0775
  notify: Restart openresty
  tags: [openresty, lapis, dashboard, nginx]

- name: Add nginx configuration
  copy:
    src: ../../nginx-conf.d/
    dest: /opt/nginx/conf.d/
    owner: "www-data"
    group: root
    mode: "0644"
  tags: [openresty, lapis, dashboard, nginx]

- name: Copy openresty bootstrap script
  template:
    src: openresty.sh.j2
    dest: /tmp/openresty.sh
    mode: 0777
  tags: [openresty, lapis]

- name: Execute the openresty.sh bootstrap script
  shell: /tmp/openresty.sh
  tags: [test, openresty, lapis]

- ansible.posix.synchronize:
    src: ../../html/
    dest: /usr/local/openresty/nginx/html
  register: sync_files
  tags: [openresty, lapis, dashboard, html]

- debug:
    var: sync_files.stdout_lines
  tags: [openresty, lapis, dashboard, html]

- ansible.posix.synchronize:
    src: ../../api/
    dest: /usr/local/openresty/nginx/html/api
  notify: Restart openresty
  register: sync_files
  tags: [openresty, lapis, dashboard, nginx]

- debug:
    var: sync_files.stdout_lines
  tags: [openresty, lapis, dashboard, nginx]

- name: Copy cdn dependencies script
  template:
    src: cdn-dependencies.sh.j2
    dest: /tmp/cdn-dependencies.sh
    mode: 0777
  tags: [openresty, lapis]

- name: Make sure the nginx data directory exists
  ansible.builtin.file:
    path: /opt/nginx/data/
    state: directory
    owner: "www-data"
    group: root
    mode: 0775
  tags: [openresty, lapis]

- name: Copy Settings Config file
  copy:
    src: "{{ playbook_dir }}/{{ settings_template_file_path }}"
    dest: /opt/nginx/data/settings.json
    owner: "www-data"
    group: root
    mode: "0644"
  tags: [openresty, lapis, dashboard]

- name: Copy Environment file
  copy:
    src: "{{ playbook_dir }}/{{ env_template_file_path }}"
    dest: "/tmp/.env"
    owner: "www-data"
    group: root
    mode: "0644"
  tags: [openresty, lapis, dashboard]
  when: (nginx_web_ui_enabled == "yes")

- name: Copy Nginx Data Sync CRON bash
  template:
    src: nginx-data-sync-required.sh.j2
    dest: /usr/sbin/nginx-data-sync-required.sh
    mode: 0775
  tags: [openresty, nginx]

# - debug:
#     msg: "hdopenresty_api_user_email: {{ hdopenresty_api_user_email }}"
#   tags: [openresty, nginx]

- name: Run Nginx Data Sync CRON bash Script every minute sync if required
  cron:
    name: "nginx_data_sync"
    user: "root"
    minute: "*/1"
    job: '/bin/bash /usr/sbin/nginx-data-sync-required.sh "{{ nginx_data_sync_enabled }}" "{{ hdopenresty_api_user_email }}" "{{ hdopenresty_api_user_passwd }}" "{{ hdopenresty_api_target_hash }}" "{{ hdopenresty_api_target_serial }}"'
  tags: [openresty, nginx]
  no_log: true

- name: Copy Nginx Restart CRON bash Script
  template:
    src: nginx_restart_if_required.sh.j2
    dest: /usr/sbin/nginx_restart_if_required.sh
    mode: 0775
  tags: [openresty, lapis, nginx]

- name: Run Nginx Restart CRON bash Script every minute restart nginx if required
  cron:
    name: "nginx_restart"
    user: "root"
    minute: "*/1"
    job: "/bin/bash /usr/sbin/nginx_restart_if_required.sh"
  tags: [openresty, lapis, nginx]

- name: Execute the cdn-dependencies.sh script
  shell: /tmp/cdn-dependencies.sh
  tags: [openresty, lapis]

- name: Deploy OpenResty systemd service file
  template:
    src: openresty.service.j2
    dest: /etc/systemd/system/openresty.service
  notify: Reload systemd
  tags: [openresty, lapis]

- ansible.posix.synchronize:
    src: ../../openresty-admin/
    dest: /usr/local/openresty/nginx/html/openresty-admin
  register: sync_files
  tags: [openresty, lapis, dashboard]
  when: (nginx_web_ui_enabled == "yes")

- debug:
    var: sync_files.stdout_lines
  tags: [openresty, lapis, dashboard]

- name: Copy npm yarn dependencies script
  template:
    src: install-build-npm-yarn.sh.j2
    dest: /tmp/install-build-npm-yarn.sh
    mode: 0777
  tags: [openresty, lapis, dashboard]
  when: (nginx_web_ui_enabled == "yes")

- name: Execute the install-build-npm-yarn.sh script
  shell: /tmp/install-build-npm-yarn.sh
  tags: [openresty, lapis, dashboard]
  when: (nginx_web_ui_enabled == "yes")

- name: copy nginx conf file
  template:
    src: nginx.conf.j2
    dest: /usr/local/openresty/nginx/conf/nginx.conf
  notify: Restart openresty
  tags: [openresty, lapis, dashboard, nginx]

- name: Copy nginx related dir permissions scripts
  template:
    src: fix-permissions.sh.j2
    dest: /usr/sbin/fix-permissions.sh
    mode: 0775
  tags: [openresty, lapis, dashboard, nginx, permissions]

- name: Fix nginx related dir permissions
  shell: /usr/sbin/fix-permissions.sh
  tags: [openresty, lapis, dashboard, nginx, permissions]

- ansible.posix.synchronize:
    src: ../../nginx-tenants.d/
    dest: /opt/nginx/conf.d/
  notify: Restart openresty
  register: sync_files
  tags: [openresty, lapis, dashboard, nginx]

- debug:
    var: sync_files.stdout_lines
  tags: [openresty, lapis, dashboard, nginx]

- name: Enable and start OpenResty service
  systemd:
    name: openresty
    state: started
    enabled: yes
  tags: [openresty, lapis, dashboard, nginx]

- name: Verify Nginx config
  command: openresty -t
  changed_when: false
  tags: [openresty, lapis, dashboard, nginx]
