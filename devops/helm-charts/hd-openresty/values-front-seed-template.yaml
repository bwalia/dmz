# Default values for DMZ Helm Chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

app:
  name: dmz-front
  version: 0.1.1
  description: A Helm chart for Kubernetes
  keywords:
    - helm
    - chart
    - kubernetes
  namespace: __target_environment_ref__
  dns_resolver: "10.0.0.10"
  primary_dns_resolver : "10.0.0.10"
  secondary_dns_resolver : "10.0.0.10"
  dns_resolver_port: 53
  api_url: "http://dmz-api-svc__target_environment_ref__.__target_environment_ref__.svc.cluster.local:8080/api"
  redis_host: "redis-service.__target_environment_ref__.svc.cluster.local"
  target_env: "__target_environment_ref__"
  target_type: "front"
  front_url: "http://front.__target_environment_ref__.healthdata.local"
  sync_data_onload: false

persistentStorage: ""
storageType: ""

secure_env_file: ""
regcred_nexus_healthdata: ""

image:
  repository: 192.168.1.193:30082/dmz
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

storage: "persistent"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "traefik"
  annotations: {}
    # kubernetes.io/ingress.class: traefik
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: __target_environment_ref__-frontdoor.kubes.healthdata.be
      paths:
        - path: /
          pathType: ImplementationSpecific
          serviceName: hd-front-svc-__target_environment_ref__
          servicePort: 80
    - host: __target_environment_ref__-front.kubes.healthdata.be
      paths:
        - path: /
          pathType: ImplementationSpecific
          serviceName: hd-front-svc-__target_environment_ref__
          servicePort: 80
    - host: front.__target_environment_ref__.healthdata.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          serviceName: hd-front-svc-__target_environment_ref__
          servicePort: 80
    - host: httpbin.__target_environment_ref__.healthdata.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          serviceName: hd-front-svc-__target_environment_ref__
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
